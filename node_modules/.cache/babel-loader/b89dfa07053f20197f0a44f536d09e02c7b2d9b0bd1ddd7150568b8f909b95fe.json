{"ast":null,"code":"var _jsxFileName = \"G:\\\\my-portfolio\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProjectCard from '../components/ProjectCard';\nimport './Projects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    // Fetch repository data from GitHub\n    fetch('https://api.github.com/users/ALmoSTGoD/repos').then(response => response.json()).then(data => {\n      const projectData = data.map(repo => ({\n        title: repo.name,\n        description: repo.description || 'No description available.',\n        image: 'https://github.com/ALmoSTGoD.png' // Placeholder, update if you have images\n      }));\n      setProjects(projectData);\n    }).catch(error => console.error('Error fetching GitHub repos:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), projects.length > 0 ? projects.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n      title: project.title,\n      description: project.description,\n      image: project.image\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","ProjectCard","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","fetch","then","response","json","data","projectData","map","repo","title","name","description","image","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","project","index","_c","$RefreshReg$"],"sources":["G:/my-portfolio/src/pages/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProjectCard from '../components/ProjectCard';\r\nimport './Projects.css';\r\n\r\nfunction Projects() {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch repository data from GitHub\r\n    fetch('https://api.github.com/users/ALmoSTGoD/repos')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const projectData = data.map(repo => ({\r\n          title: repo.name,\r\n          description: repo.description || 'No description available.',\r\n          image: 'https://github.com/ALmoSTGoD.png' // Placeholder, update if you have images\r\n        }));\r\n        setProjects(projectData);\r\n      })\r\n      .catch(error => console.error('Error fetching GitHub repos:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"projects\">\r\n      <h1>My Projects</h1>\r\n      {projects.length > 0 ? (\r\n        projects.map((project, index) => (\r\n          <ProjectCard \r\n            key={index}\r\n            title={project.title}\r\n            description={project.description}\r\n            image={project.image}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>Loading projects...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,8CAA8C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,WAAW,GAAGD,IAAI,CAACE,GAAG,CAACC,IAAI,KAAK;QACpCC,KAAK,EAAED,IAAI,CAACE,IAAI;QAChBC,WAAW,EAAEH,IAAI,CAACG,WAAW,IAAI,2BAA2B;QAC5DC,KAAK,EAAE,kCAAkC,CAAC;MAC5C,CAAC,CAAC,CAAC;MACHZ,WAAW,CAACM,WAAW,CAAC;IAC1B,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBrB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBtB,QAAQ,CAACuB,MAAM,GAAG,CAAC,GAClBvB,QAAQ,CAACQ,GAAG,CAAC,CAACgB,OAAO,EAAEC,KAAK,kBAC1B5B,OAAA,CAACF,WAAW;MAEVe,KAAK,EAAEc,OAAO,CAACd,KAAM;MACrBE,WAAW,EAAEY,OAAO,CAACZ,WAAY;MACjCC,KAAK,EAAEW,OAAO,CAACX;IAAM,GAHhBY,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF,CAAC,gBAEFzB,OAAA;MAAAqB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CAnCQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}