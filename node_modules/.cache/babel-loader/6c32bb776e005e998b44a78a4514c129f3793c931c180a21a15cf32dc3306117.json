{"ast":null,"code":"var _jsxFileName = \"G:\\\\my-portfolio\\\\src\\\\pages\\\\Projects.js\";\n// src/components/Projects.js\nimport React from 'react';\nimport ProjectCard from '../components/ProjectCard';\nimport './Projects.css';\n\n// List of all projects with their titles, descriptions, and images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  title: 'Snake Game',\n  description: 'A classic Snake game implemented with JavaScript and HTML5 Canvas.',\n  image: require('./components/snake-game-image.png') // Use require for local images\n}, {\n  title: 'SongSift-Rich',\n  description: 'A feature-rich application for discovering and recommending music using Spotify API.',\n  image: require('./components/song-sift-gui-image.png') // Use require for local images\n}, {\n  title: 'SongSift-GUI',\n  description: 'A graphical user interface for the SongSift application with a polished design.',\n  image: require('./components/song-sift-gui-image.png') // Use require for local images\n}, {\n  title: 'Hagrid-Chatbot',\n  description: 'An AI-powered chatbot built with OpenAI’s GPT models for interactive conversations.',\n  image: require('./components/hagrid-chatbot-image.png') // Use require for local images\n}, {\n  title: 'Hagrid-VA',\n  description: 'Voice Assistant using OpenAI’s APIs with speech recognition and automation features.',\n  image: require('./hagrid-va-image.png') // Use require for local images\n}\n// Add more projects if needed\n];\nfunction Projects() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: projects.length > 0 ? projects.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        title: project.title,\n        description: project.description,\n        image: project.image\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","ProjectCard","jsxDEV","_jsxDEV","projects","title","description","image","require","Projects","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","project","index","_c","$RefreshReg$"],"sources":["G:/my-portfolio/src/pages/Projects.js"],"sourcesContent":["// src/components/Projects.js\r\nimport React from 'react';\r\nimport ProjectCard from '../components/ProjectCard';\r\nimport './Projects.css';\r\n\r\n// List of all projects with their titles, descriptions, and images\r\nconst projects = [\r\n  {\r\n    title: 'Snake Game',\r\n    description: 'A classic Snake game implemented with JavaScript and HTML5 Canvas.',\r\n    image: require('./components/snake-game-image.png') // Use require for local images\r\n  },\r\n  {\r\n    title: 'SongSift-Rich',\r\n    description: 'A feature-rich application for discovering and recommending music using Spotify API.',\r\n    image: require('./components/song-sift-gui-image.png') // Use require for local images\r\n  },\r\n  {\r\n    title: 'SongSift-GUI',\r\n    description: 'A graphical user interface for the SongSift application with a polished design.',\r\n    image: require('./components/song-sift-gui-image.png') // Use require for local images\r\n  },\r\n  {\r\n    title: 'Hagrid-Chatbot',\r\n    description: 'An AI-powered chatbot built with OpenAI’s GPT models for interactive conversations.',\r\n    image: require('./components/hagrid-chatbot-image.png') // Use require for local images\r\n  },\r\n  {\r\n    title: 'Hagrid-VA',\r\n    description: 'Voice Assistant using OpenAI’s APIs with speech recognition and automation features.',\r\n    image: require('./hagrid-va-image.png') // Use require for local images\r\n  }\r\n  // Add more projects if needed\r\n];\r\n\r\nfunction Projects() {\r\n  return (\r\n    <div className=\"projects\">\r\n      <header>\r\n        <h1>My Projects</h1>\r\n      </header>\r\n      <div className=\"card-container\">\r\n        {projects.length > 0 ? (\r\n          projects.map((project, index) => (\r\n            <ProjectCard \r\n              key={index}\r\n              title={project.title}\r\n              description={project.description}\r\n              image={project.image}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No projects available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,gBAAgB;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,CACf;EACEC,KAAK,EAAE,YAAY;EACnBC,WAAW,EAAE,oEAAoE;EACjFC,KAAK,EAAEC,OAAO,CAAC,mCAAmC,CAAC,CAAC;AACtD,CAAC,EACD;EACEH,KAAK,EAAE,eAAe;EACtBC,WAAW,EAAE,sFAAsF;EACnGC,KAAK,EAAEC,OAAO,CAAC,sCAAsC,CAAC,CAAC;AACzD,CAAC,EACD;EACEH,KAAK,EAAE,cAAc;EACrBC,WAAW,EAAE,iFAAiF;EAC9FC,KAAK,EAAEC,OAAO,CAAC,sCAAsC,CAAC,CAAC;AACzD,CAAC,EACD;EACEH,KAAK,EAAE,gBAAgB;EACvBC,WAAW,EAAE,qFAAqF;EAClGC,KAAK,EAAEC,OAAO,CAAC,uCAAuC,CAAC,CAAC;AAC1D,CAAC,EACD;EACEH,KAAK,EAAE,WAAW;EAClBC,WAAW,EAAE,sFAAsF;EACnGC,KAAK,EAAEC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC1C;AACA;AAAA,CACD;AAED,SAASC,QAAQA,CAAA,EAAG;EAClB,oBACEN,OAAA;IAAKO,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBR,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAAQ,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACTZ,OAAA;MAAKO,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BP,QAAQ,CAACY,MAAM,GAAG,CAAC,GAClBZ,QAAQ,CAACa,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC1BhB,OAAA,CAACF,WAAW;QAEVI,KAAK,EAAEa,OAAO,CAACb,KAAM;QACrBC,WAAW,EAAEY,OAAO,CAACZ,WAAY;QACjCC,KAAK,EAAEW,OAAO,CAACX;MAAM,GAHhBY,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF,CAAC,gBAEFZ,OAAA;QAAAQ,QAAA,EAAG;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACK,EAAA,GAtBQX,QAAQ;AAwBjB,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}